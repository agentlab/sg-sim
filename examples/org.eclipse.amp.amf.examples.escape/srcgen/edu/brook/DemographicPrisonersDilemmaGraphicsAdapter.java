package edu.brook;

import org.eclipse.amp.agf.IGraphicsAdapter;
import org.eclipse.amp.agf.GraphicsAdapter;
import org.eclipse.amp.agf.gef.IFigureProvider;
import org.eclipse.core.runtime.IAdapterFactory;

import org.eclipse.amp.agf.gef.IFigureProvider;
import org.eclipse.jface.viewers.IColorProvider;
import org.eclipse.jface.viewers.ILabelProvider;

/**
 * <!-- begin-user-doc -->
 * Demographic Prisoner_s Dilemma Java Implementation.
 * 
 * Generated by AMF for model: DemographicPrisoner_sDilemma.metaabm in project: org.eclipse.amp.amf.examples.escape 
 * <!-- end-user-doc -->
 * @generated
 */
public class DemographicPrisonersDilemmaGraphicsAdapter extends GraphicsAdapter {

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static IGraphicsAdapter singleton;

	IColorProvider[] demographicPrisoner_sDilemmaColorProviders = new IColorProvider[]{};
	IColorProvider[] playerColorProviders = new IColorProvider[]{CooperateDefectStyleColorProvider
			.getDefault()};
	IColorProvider[] playCellColorProviders = new IColorProvider[]{PlayCellStyleColorProvider
			.getDefault()};

	IFigureProvider[] demographicPrisoner_sDilemmaFigureProviders = new IFigureProvider[]{};
	IFigureProvider[] playerFigureProviders = new IFigureProvider[]{CooperateDefectStyleFigureProvider
			.getDefault()};
	IFigureProvider[] playCellFigureProviders = new IFigureProvider[]{PlayCellStyleFigureProvider
			.getDefault()};

	/**
	 * <!-- begin-user-doc -->
	 * @param type
	 * @return
	 * @see org.eclipse.amp.agf.IGraphicsAdapter#getColorsForClass(java.lang.Class)
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public IColorProvider[] getColorsForClass(Class type) {
		if (type == DemographicPrisonersDilemma.class) {
			return demographicPrisoner_sDilemmaColorProviders;
		}
		if (type == Player.class) {
			return playerColorProviders;
		}
		if (type == PlayCell.class) {
			return playCellColorProviders;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * @param type
	 * @return
	 * @see org.eclipse.amp.agf.IGraphicsAdapter#getFiguresForClass(java.lang.Class)
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public IFigureProvider[] getFiguresForClass(Class type) {
		if (type == DemographicPrisonersDilemma.class) {
			return demographicPrisoner_sDilemmaFigureProviders;
		}
		if (type == Player.class) {
			return playerFigureProviders;
		}
		if (type == PlayCell.class) {
			return playCellFigureProviders;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * @param type
	 * @return
	 * @see org.eclipse.amp.agf.IGraphicsAdapter#getLabelsForClass(java.lang.Class)
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ILabelProvider[] getLabelsForClass(Class type) {
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static IGraphicsAdapter getDefault() {
		if (singleton == null) {
			singleton = new DemographicPrisonersDilemmaGraphicsAdapter();
		}
		return singleton;
	}
}
