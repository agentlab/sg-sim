package org.eclipse.amp.amf.examples.escape;

import java.util.ArrayList;
import java.util.List;
import java.util.Collections;

import org.eclipse.core.runtime.IAdapterFactory;
import org.eclipse.amp.agf.IGraphicsAdapted;
import org.eclipse.amp.agf.IGraphicsAdapter;

import org.eclipse.swt.graphics.Color;
import org.eclipse.jface.viewers.IColorProvider;

import org.ascape.model.Agent;
import org.ascape.model.Cell;
import org.ascape.model.CellOccupant;
import org.ascape.model.HostCell;
import org.ascape.model.LocatedAgent;
import org.ascape.model.Scape;
import org.ascape.model.event.ScapeEvent;
import org.ascape.model.rule.Rule;
import org.ascape.model.rule.ExecuteThenUpdate;
import org.ascape.model.space.CollectionSpace;
import org.ascape.model.space.Coordinate;
import org.ascape.model.space.Coordinate2DDiscrete;
import org.ascape.model.space.Graph;
import org.ascape.model.space.Location;
import org.ascape.model.space.Singleton;
import org.ascape.runtime.NonGraphicRunner;
import org.ascape.util.Conditional;
import org.ascape.util.data.DataPoint;
import org.ascape.util.data.DataPointConcrete;
import org.ascape.util.vis.ColorFeature;
import org.ascape.util.vis.ColorFeatureConcrete;
import org.ascape.view.vis.ChartView;
import org.ascape.view.vis.GEFView;
import org.ascape.view.vis.GraphView;

import org.eclipse.amp.escape.runtime.extension.IAgentChild;

/**
 * <!-- begin-user-doc -->
 * WikiExample Java Implementation.
 * 
 * Generated by AMF for model: WikiExample.metaabm in project: org.eclipse.amp.amf.examples.escape 
 * <!-- end-user-doc -->
 * @generated
 */
public class WikiExample extends Scape implements IGraphicsAdapted {

	/**
	 * <!-- begin-user-doc -->
	 * The number of individuals to create.
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private int individualCount = 50;
	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private int maximumAge = 10;
	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private double maximumWealth = 0.0;
	/**
	 * <!-- begin-user-doc -->
	 * The size of each dimension.
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private int[] cityDimensions = new int[2];
	/**
	 * <!-- begin-user-doc -->
	 * The horizontal extent of the space.
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private int cityWidth = 20;
	/**
	 * <!-- begin-user-doc -->
	 * The vertical extent of the space.
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private int cityHeight = 20;
	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private Scape city = null;

	private List<IAgentChild> children;

	public List<IAgentChild> getChildren() {
		return children;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Constructs a new WikiExample.
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public WikiExample() {

		children = new ArrayList<IAgentChild>();

	}

	//todo, make this a useful value for evaluating compatibility of different versions of generated classes

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static final long serialVersionUID = 89989998L;

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static long nextUniqueID;

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private long uniqueID;

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public long getUID() {
		if (uniqueID == 0) {
			uniqueID = nextUniqueID++;
		}
		return uniqueID;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Clones the agent, ensuring that a unique id is assigned.
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Object clone() {
		try {
			WikiExample clone = (WikiExample) super.clone();
			clone.uniqueID = 0;
			return clone;
		} catch (Exception e) {
			throw new RuntimeException("Unexpected cloning exception: " + e);
		}
	}

	org.ascape.model.Scape individualScape;

	/**
	 * <!-- begin-user-doc -->
	 * Create an instance of Individual that will be used to populate the individualScape.
	 * Overide to customize the prototype, for example to change the views created for a member scape.
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Individual createIndividualPrototype() {
		Individual individual = new Individual();
		individual.setCoordinate(new Coordinate2DDiscrete(0, 0));
		return individual;
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	static int next_vm_id;

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	int vm_unique_id;

	/**
	 * <!-- begin-user-doc -->
	 * Creates the members of WikiExample.
	 * <!-- end-user-doc --> 
	 * @generated
	 */
	public void createScape() {
		super.createScape();

		setName("WikiExample");
		Individual individualProto = createIndividualPrototype();
		individualScape = new Scape();
		individualScape.setName("Individuals");
		individualScape.setPrototypeAgent(individualProto);
		individualScape.setExecutionOrder(Scape.RULE_ORDER);

		individualScape.setSize(getIndividualCount());
		city = new Scape(new org.ascape.model.space.Array2DMoore());
		city.setExecutionOrder(Scape.RULE_ORDER);
		city.setPrototypeAgent(new Block());
		city.setExtent(new org.ascape.model.space.Coordinate2DDiscrete(
				getCityWidth(), getCityHeight()));

		city.setName("Citys");
		((CollectionSpace) city.getSpace()).setPeriodic(false);
		add(city);
		org.ascape.model.Scape blockScape = city;

		add(individualScape);

		individualProto.setHostScape(city);
		city.getRules().clear();

		individualScape
				.addStatCollector(new org.ascape.util.data.StatCollectorCond(
						individualScape.getName() + " Population") {

					/**
					 * <!-- begin-user-doc -->
					 * 
					 * <!-- end-user-doc -->
					 * @generated
					 */
					private static final long serialVersionUID = 684614444640209893L;

					/**
					 * <!-- begin-user-doc -->
					 * 
					 * <!-- end-user-doc -->
					 * @generated
					 */
					@SuppressWarnings("unused")
					public final boolean meetsCondition(Object object) {
						return true;
					}
				});

		individualScape.addRule(new Rule("Find Partner") {

			/**
			 * <!-- begin-user-doc -->
			 * 
			 * <!-- end-user-doc -->
			 * @generated
			 */
			private static final long serialVersionUID = 6846144446402098981L;

			/**
			 * <!-- begin-user-doc -->
			 * 
			 * <!-- end-user-doc -->
			 * @generated
			 */
			public void execute(Agent a) {
				((org.eclipse.amp.amf.examples.escape.Individual) a)
						.findPartner();
			}
		});

		individualScape.addInitialRule(new Rule("Initial State") {

			/**
			 * <!-- begin-user-doc -->
			 * 
			 * <!-- end-user-doc -->
			 * @generated
			 */
			private static final long serialVersionUID = 6846144446402098982L;

			/**
			 * <!-- begin-user-doc -->
			 * 
			 * <!-- end-user-doc -->
			 * @generated
			 */
			public void execute(Agent a) {
				((org.eclipse.amp.amf.examples.escape.Individual) a)
						.initialState();
			}
		});

		individualScape.addInitialRule(new Rule("Initial Movement") {

			/**
			 * <!-- begin-user-doc -->
			 * 
			 * <!-- end-user-doc -->
			 * @generated
			 */
			private static final long serialVersionUID = 6846144446402098982L;

			/**
			 * <!-- begin-user-doc -->
			 * 
			 * <!-- end-user-doc -->
			 * @generated
			 */
			public void execute(Agent a) {
				((org.eclipse.amp.amf.examples.escape.Individual) a)
						.initialMovement();
			}
		});

	}

	/**
	 * <!-- begin-user-doc -->
	 * Creates UI views for WikiExample.
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void createGraphicViews() {
		super.createGraphicViews();
		createChartViews();
		create2DViews();
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void scapeSetup(ScapeEvent scapeEvent) {
		//Set the size of the scape populations, e.g. for mutable scapes that need to have their size reset

		individualScape.setSize(getIndividualCount());
	}

	/**
	 * <!-- begin-user-doc -->
	 * Returns the Scape containing Individuals.
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public org.ascape.model.Scape getIndividualScape() {
		return individualScape;
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void createChartViews() {
		ChartView chart = new ChartView();

		final WikiExample individualScape = new WikiExample();
		individualScape.setRunner(new NonGraphicRunner());
		Individual individual = new Individual() {

			/**
			 * <!-- begin-user-doc -->
			 * 
			 * <!-- end-user-doc -->
			 * @generated
			 */
			public void requestUpdate() {
			}

			/**
			 * <!-- begin-user-doc -->
			 * 
			 * <!-- end-user-doc -->
			 * @generated
			 */
			public WikiExample getWikiExample() {
				return individualScape;
			}
		};
		individualScape.add(individual);
		HostCell individualHost = new HostCell() {

			/**
			 * <!-- begin-user-doc -->
			 * 
			 * <!-- end-user-doc -->
			 * @generated
			 */
			public void requestUpdate() {
			}
		};
		individualHost.setOccupant((CellOccupant) individual);

		IColorProvider simpleDrawColorProvider = new SimpleDrawColorProvider();

		addView(chart);
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void create2DViews() {
		addView(new GEFView());
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void createGraphViews() {
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public IGraphicsAdapter getGraphicsAdapter() {
		return WikiExampleGraphicsAdapter.getDefault();
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private Color getInferredChartColor(Object agent,
			IColorProvider colorProvider) {
		Color color = colorProvider.getForeground(agent);
		if (color == ColorFeature.BLACK) {
			color = ColorFeatureConcrete.createHSB(
					(float) java.lang.Math.random() * 360f, 1.0f, 0.8f);
		}
		return color;
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static void main(String[] args) {
		(new NonGraphicRunner())
				.openInstance("org.eclipse.amp.amf.examples.escape.WikiExample");
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */

	public void startSimulationAgentChild(int timeStep) {
		if (timeStep == getRoot().getRunner().getEarliestPeriod()) {
			for (IAgentChild tmp : children) {
				tmp.startSimulation(timeStep);
			}
		}
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */

	public void calculateTimeStep(int timeStep) {
		for (IAgentChild tmp : children) {
			tmp.calculate(timeStep);
		}
	}

	/**
	 * <!-- begin-user-doc -->
	 * Gets the Individual Count property for WikiExample.
	 * @return The number of individuals to create.
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public int getIndividualCount() {
		return individualCount;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Sets the Individual Count property for WikiExample.
	 * The number of individuals to create.
	 * @param _individualCount the new Individual Count value
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setIndividualCount(int _individualCount) {
		individualCount = _individualCount;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Gets the Maximum Age property for WikiExample.
	 * @return 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public int getMaximumAge() {
		return maximumAge;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Sets the Maximum Age property for WikiExample.
	 * 
	 * @param _maximumAge the new Maximum Age value
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setMaximumAge(int _maximumAge) {
		maximumAge = _maximumAge;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Gets the Maximum Wealth property for WikiExample.
	 * @return 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public double getMaximumWealth() {
		return maximumWealth;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Sets the Maximum Wealth property for WikiExample.
	 * 
	 * @param _maximumWealth the new Maximum Wealth value
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setMaximumWealth(double _maximumWealth) {
		maximumWealth = _maximumWealth;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Gets the Dimensions property for City.
	 * @return The size of each dimension.
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public int[] getCityDimensions() {
		return cityDimensions;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Sets the Dimensions property for City.
	 * The size of each dimension.
	 * @param _cityDimensions the new Dimensions value
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setCityDimensions(int[] _cityDimensions) {
		cityDimensions = _cityDimensions;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Gets the Width property for City.
	 * @return The horizontal extent of the space.
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public int getCityWidth() {
		return cityWidth;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Sets the Width property for City.
	 * The horizontal extent of the space.
	 * @param _cityWidth the new Width value
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setCityWidth(int _cityWidth) {
		cityWidth = _cityWidth;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Gets the Height property for City.
	 * @return The vertical extent of the space.
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public int getCityHeight() {
		return cityHeight;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Sets the Height property for City.
	 * The vertical extent of the space.
	 * @param _cityHeight the new Height value
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setCityHeight(int _cityHeight) {
		cityHeight = _cityHeight;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Gets the City property for WikiExample.
	 * @return 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Scape getCity() {
		return city;
	}

	/**
	 * <!-- begin-user-doc -->
	 * Sets the City property for WikiExample.
	 * 
	 * @param _city the new City value
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setCity(Scape _city) {
		city = _city;
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getName() {
		if (name == null) {
			return "WikiExample " + getUID();
		} else {
			return name;
		}
	}
}
