package name.milesparker.epi.plague;

import org.ascape.util.vis.ColorFeature;
import org.ascape.model.CellOccupant;
import org.ascape.model.HostCell;
import org.eclipse.swt.graphics.Color;
import org.eclipse.swt.widgets.Display;
import org.eclipse.draw2d.IFigure;
import org.eclipse.draw2d.Shape;
import org.eclipse.draw2d.ColorConstants;

import org.eclipse.jface.viewers.IColorProvider;
import org.eclipse.amp.agf.gef.IFigureProvider;
import org.eclipse.amp.agf.gef.DefaultFigureProvider;
import org.eclipse.amp.agf.gef.Shapes;

/**
 * <!-- begin-user-doc -->
 * Individual Style 2D Java Implementation.
 * 
 * Generated by AMF for model: EpidemicPlague.metaabm in project: org.eclipse.amp.amf.examples.escape 
 * <!-- end-user-doc -->
 * @generated
 */
public class IndividualStyle2DFigureProvider extends DefaultFigureProvider {

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static IFigureProvider singleton;

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public IFigure getFigure(Object object) {
		IFigure figure = null;
		Color color = null;
		Individual rootActGroup = (Individual) object;
		Individual individualRule = rootActGroup;
		if (individualRule.getStatus() == StatusEnum.susceptible) {
			if (figure == null) {
				figure = Shapes.createOval();
			}
			color = ColorConstants.blue;

			figure.setBackgroundColor(color);
			((Shape) figure).setFill(true);
		}
		if (individualRule.getStatus() == StatusEnum.exposed) {
			if (figure == null) {
				figure = Shapes.createOval();
			}
			color = ColorConstants.yellow;

			figure.setBackgroundColor(color);
			((Shape) figure).setFill(true);
		}
		if (individualRule.getStatus() == StatusEnum.asymptomInfectious) {
			if (figure == null) {
				figure = Shapes.createOval();
			}
			color = ColorConstants.orange;

			figure.setBackgroundColor(color);
			((Shape) figure).setFill(true);
		}
		if (individualRule.getStatus() == StatusEnum.recovered) {
			if (figure == null) {
				figure = Shapes.createOval();
			}
			color = ColorConstants.green;

			figure.setBackgroundColor(color);
			((Shape) figure).setFill(true);
		}
		if (individualRule.getStatus() == StatusEnum.dead) {
			if (figure == null) {
				figure = Shapes.createOval();
			}
			color = ColorConstants.black;

			figure.setBackgroundColor(color);
			((Shape) figure).setFill(true);
		}
		if (individualRule.getStatus() == StatusEnum.symptomInfectious) {
			if (figure == null) {
				figure = Shapes.createOval();
			}
			color = ColorConstants.red;

			figure.setBackgroundColor(color);
			((Shape) figure).setFill(true);
		}
		return figure;
	}

	/**
	 * <!-- begin-user-doc -->
	 * 
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static IFigureProvider getDefault() {
		if (singleton == null) {
			singleton = new IndividualStyle2DFigureProvider();
		}
		return singleton;
	}
}
